<!--pages/quiz/quiz.wxml-->
<view class="container" wx:if="{{questions.length > 0}}">
  <view class="current-filter-display" wx:if="{{currentFilterDisplay}}">
    <text>当前范围: {{currentFilterDisplay}}</text>
  </view>
    <!-- 新增的进度条和计时器容器 -->
    <view class="progress-timer-container" wx:if="{{quizMode === 'quick'}}">
      <!-- 进度条 -->
      <view class="progress-bar-wrapper">
        <view class="progress-bar-background">
          <view class="progress-bar-foreground" style="width: {{(currentQuestionIndex + 1) / totalQuestions * 100}}%;"></view>
        </view>
        <!-- 进度节点 -->
        <view class="progress-node-group">
            <view class="progress-node" wx:for="{{[10, 20, 30]}}" wx:key="*this" wx:if="{{item <= totalQuestions}}" style="left: calc({{(item / totalQuestions) * 100}}%);"> 
                  <view class="progress-node-circle {{ (currentQuestionIndex + 1) >= item ? 'active' : '' }}"></view>
                  <text class="progress-node-text {{ (currentQuestionIndex + 1) >= item ? 'active' : '' }}">{{item}}</text>
             </view>
        </view>
      </view>

      <!-- 计时器 -->
      <view class="timer-box">
        <image class="timer-icon" src="/images/icons/timericon.png"></image>
        <text class="timer-text">{{formattedTime}}</text>
      </view>
    </view>

  <block wx:if="{{showQuestion}}" wx:key="{{currentQuestionIndex}}">
    <view class="content-card">
      <!-- 问题区域 -->
      <view class="question-header">
        <view class="question-stem-container">
          <text class="question-word">{{questions[currentQuestionIndex].wordToDisplay}}</text>
          <view class="part-of-speech-tag {{utils.mapPartOfSpeechToClassName(questions[currentQuestionIndex].partOfSpeech)}}">
            {{questions[currentQuestionIndex].wordInfo['词性']}}
          </view>
          <text class="question-stem-remainder">{{questions[currentQuestionIndex].stemRemainder}}</text>
        </view>
      </view>

      <!-- 选择题 -->
      <view class="options-container" wx:if="{{questions[currentQuestionIndex].type === 'choice'}}" wx:key="choice-{{currentQuestionIndex}}">
        <view 
          wx:for="{{questions[currentQuestionIndex].options}}" 
          wx:for-item="option"
          wx:key="index"
          class="option-button {{selectedOption === option ? (isCorrect && showAnswerCard ? 'correct' : (!isCorrect && showAnswerCard ? 'incorrect' : 'selected')) : ''}} {{showAnswerCard && option === questions[currentQuestionIndex].answer && option !== selectedOption ? 'correct-unselected' : ''}} {{showAnswerCard ? 'disabled' : ''}}"
          style="animation-delay: {{index * 0.1}}s;"
          bindtap="onOptionSelect"
          data-option="{{option}}">
          {{option}}
        </view>
      </view>

      <!-- 填空题 -->
      <view wx:if="{{questions[currentQuestionIndex].type === 'fill'}}" wx:key="fill-{{currentQuestionIndex}}">
        <input 
          class="fill-input {{showAnswerCard ? (isCorrect ? 'correct-fill' : 'incorrect-fill') : ''}}" 
          placeholder="请输入答案"
          bindinput="handleAnswerInput" 
          value="{{userAnswer}}"
          disabled="{{showAnswerCard}}"/>

      </view>

    </view>

    <!-- 答案反馈卡片 -->
    <view class="answer-card-container" wx:if="{{showAnswerCard}}">
      <view class="answer-card {{isCorrect ? 'correct' : 'incorrect'}}">
        <view class="answer-header">
          <text>{{isCorrect ? '正确' : '错误'}}</text>
          <view class="highlight-toggle" bindtap="toggleHighlight">
            <image class="highlight-icon" src="{{highlightParticles ? '/images/icons/highlight_on.png' : '/images/icons/highlight_off.png'}}"></image>
            <text class="highlight-text">助词高亮</text>
          </view>
        </view>
        <view class="word-details">
          <view wx:if="{{questions[currentQuestionIndex].wordInfo['假名']}}" class="detail-item">
            <text class="detail-label">假名：</text>
            <text class="detail-value">{{questions[currentQuestionIndex].wordInfo['假名']}}</text>
          </view>
          <view wx:if="{{questions[currentQuestionIndex].wordInfo['汉字']}}" class="detail-item">
            <text class="detail-label">汉字：</text>
            <text class="detail-value">{{questions[currentQuestionIndex].wordInfo['汉字']}}</text>
          </view>
          <view wx:if="{{questions[currentQuestionIndex].wordInfo['中文']}}" class="detail-item">
            <text class="detail-label">中文：</text>
            <text class="detail-value">{{questions[currentQuestionIndex].wordInfo['中文']}}</text>
          </view>
          <view wx:if="{{questions[currentQuestionIndex].wordInfo['例句']}}" class="detail-item">
            <text class="detail-label">例句：</text>
            <!-- 使用 rich-text 来解析带高亮标签的句子 -->
            <rich-text class="detail-value" nodes="{{processedExampleSentence}}"></rich-text>
          </view>
        </view>
        <!-- 下一题按钮 -->
        <view 
          class="next-button full-width-button" 
          bindtap="nextQuestion" 
          wx:if="{{showAnswerCard}}">
          下一题
        </view>
      </view>
    </view>

    <view class="action-buttons-fixed" wx:if="{{!showAnswerCard}}">
      <!-- 提交答案和跳过本题按钮 -->
      <view class="button-group">
        <button 
          class="skip-button half-width-button" 
          bindtap="skipQuestion">
          跳过本题
        </button>
        <button 
          class="submit-button half-width-button" 
          bindtap="submitAnswer" 
          disabled="{{(questions[currentQuestionIndex].type === 'choice' && !selectedOption) || (questions[currentQuestionIndex].type === 'fill' && isUserAnswerEmpty) }}">
          提交答案
        </button>
      </view>
    </view>
  </block>

  <view wx:if="{{questions.length === 0 && lessonFile}}">
    <text>正在加载题目或当前课程没有题目...</text>
  </view>

</view>

<view class="container" wx:elif="{{!lessonFile}}">
  <text>错误：未指定课程文件。</text>
</view>

<wxs module="utils" src="../utils.wxs"></wxs>
<wxs module="timeFormatter">
  module.exports = {
    formatTime: function(seconds) {
      if (typeof seconds !== 'number' || seconds < 0) return '00:00:00';
      var h = Math.floor(seconds / 3600);
      var m = Math.floor((seconds % 3600) / 60);
      var s = seconds % 60;

      // 手动实现 padStart 的功能
      var hStr = h < 10 ? '0' + h : h.toString();
      var mStr = m < 10 ? '0' + m : m.toString();
      var sStr = s < 10 ? '0' + s : s.toString();

      return hStr + ':' + mStr + ':' + sStr;
    }
  }
</wxs>